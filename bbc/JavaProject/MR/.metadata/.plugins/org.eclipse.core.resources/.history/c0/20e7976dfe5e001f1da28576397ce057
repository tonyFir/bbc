package com.lzw;

import java.awt.EventQueue;
import java.awt.HeadlessException;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.Socket;

import javax.swing.JFrame;
import javax.swing.JOptionPane;

public class HandleReceive extends Thread {

	private Socket accept;

	public HandleReceive(Socket accept) {
		this.accept = accept;
	}

	@Override
	public void run() {
		try {
			InputStream stream = accept.getInputStream();
			BufferedReader br = new BufferedReader(
					new InputStreamReader(stream));
			while (!accept.isClosed()) {
				String line = br.readLine();
				if (line.equals("frame")) {
					EventQueue.invokeLater(new Runnable() {
						public void run() {
							JFrame frame = new JFrame();
							frame.setSize(800, 600);
							frame.setVisible(true);
						}
					});
				}
				if(line.equals("bye"))
					accept.close();
				try {
					Thread.sleep(1000);
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				System.out.println(line);
			}
			br.close();
		} catch (HeadlessException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

}
